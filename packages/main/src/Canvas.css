.canvas {
  --zoom: 1;
  background: var(--canvas-bg);

  &.tool-edge, &.tool-edge * { cursor: crosshair !important; }
  &.tool-text, &.tool-text * { cursor: text !important; }
  &.tool-freehand, &.tool-freehand * { cursor: crosshair !important; }
  &.tool-pen, &.tool-pen * { cursor: default !important; }
  &.tool-node, &.tool-node * { cursor: default !important; }
  &.tool-pan, &.tool-pan * { cursor: move !important; }

  [contenteditable] {
    outline: 0 solid transparent;
    border-radius: 3px;

    &::selection, *::selection {
      background: rgba(175,210,255,0.5);
    }
    &::-moz-selection, *::-moz-selection {
      background: rgba(175,210,255,0.5);
    }
  }

  [contenteditable]:not(:focus) {
    border: none; /*1px dashed #ddd;*/
  }

  [contenteditable]:focus {
    border: 3px solid #51a7e8;
    background: rgba(255, 255, 255, 0.2);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075), 0 0 5px rgba(81, 167, 232, 0.5);
  }

  .svg-doc-bounds {
    fill: white;
    stroke: #1c1917;
    stroke-width: 1;
    filter: drop-shadow(2px 2px 4px rgba(27, 25, 23, 0.05));
  }


  .svg-grid {
    stroke-width: calc(1 * var(--zoom));
  }

  .svg-handle {
    &:hover,
    &:active {
      fill: white;
      stroke-width: calc(4 * var(--zoom));
      transition: stroke-width 250ms;
    }
  }

  .svg-selection {
    --_selection-color: var(--accent-9);
    stroke-width: calc(1 * var(--zoom));
    stroke: var(--_selection-color);

    .svg-selection__bb {
      fill: none;
    }

    /* This includes both rotation and resize handles */
    .svg-selection__handle {
      fill: white;
      /* Note, that cursor is set in the code */
    }

    /* This is mainly the endpoint of edges */
    .svg-selection__handle-edge {
      fill: white;
      cursor: move;

      &.svg-selection__handle-edge--connected {
        fill: var(--_selection-color);
      }
    }

    .svg-rotation-handle {
      stroke-width: calc(1 * var(--zoom));
      fill: none;

      &:hover, &:active {}

      .svg-rotation-handle__backing {
        stroke: transparent;
        stroke-width: calc(8 * var(--zoom));
        stroke-linecap: round;

        &:hover,
        &:active {
          stroke: var(--accent-4);
        }
      }
    }

    .svg-selection__label-node {
      fill: var(--canvas-bg);
      stroke: purple;
      cursor: move;
    }
    .svg-selection__label-node__line {
      stroke: purple;
      stroke-dasharray: calc(5 * var(--zoom)) calc(5 * var(--zoom));
    }

    .svg-selection__group-bounds {
      fill: none;
      stroke-dasharray: calc(5 * var(--zoom)) calc(5 * var(--zoom));
      stroke: var(--accent-6);
    }
  }


  .svg-guide__line {
    stroke-width: calc(1 * var(--zoom));
  }
  .svg-guide__extension {
    stroke-width: calc(1 * var(--zoom));
    stroke-dasharray: calc(5 * var(--zoom)) calc(5 * var(--zoom));
  }
  .svg-guide__color--node {
    stroke: var(--accent-7);
  }
  .svg-guide__color--distance {
    stroke: var(--accent-7);
  }
  .svg-guide__color--size {
    stroke: var(--accent-7);
  }
  .svg-guide__color--canvas {
    stroke: var(--accent-7);
  }
  .svg-guide__color--source {
    stroke: var(--accent-7);
  }
  .svg-guide__color--grid {
    stroke: var(--accent-7);
  }
  .svg-guide__distance-line {
    stroke: var(--accent-7);
    fill: var(--accent-7);
    stroke-width: calc(1 * var(--zoom));
  }
  .svg-guide__distance-label-bg {
    fill: white;
  }
  .svg-guide__distance-label {
    fill: var(--accent-8);
    font-size: calc(10px * var(--zoom));
    dominant-baseline: middle;
    text-anchor: middle;
  }

  .svg-marquee {
    fill: color(from var(--accent-3) srgb r g b / 0.5);
    stroke: var(--accent-9);
    stroke-width: calc(1 * var(--zoom));
  }
  .svg-marquee__element {
    fill: transparent;
    stroke: var(--accent-9);
    stroke-width: calc(1 * var(--zoom));
  }

  .svg-bezier-handle {
    fill: white;
    stroke-width: calc(1 * var(--zoom));
    stroke: var(--accent-9);
    cursor: move;
  }
  .svg-bezier-handle-line {
    stroke-width: calc(1 * var(--zoom));
    stroke: var(--accent-9);
    stroke-dasharray: 2 2;
    cursor: move;
  }

  .svg-waypoint-handle {
    fill: white;
    cursor: move;
    stroke-width: calc(1 * var(--zoom));
    stroke: var(--accent-9);
  }

  .svg-midpoint-handle {
    fill: white;
    cursor: move;
    stroke-width: calc(1 * var(--zoom));
    stroke: var(--accent-9);
  }

  /* This is for mixed foreignObject svg text situations */
  .svg-node__fo--with-text {
    &:has(*[contenteditable="true"]) {
      & > div {
        visibility: visible;
      }
    }
  }
  .svg-node__fo--with-text:has(*[contenteditable="true"]) + text {
    fill: transparent !important;
    stroke: transparent !important;
    tspan {
      fill: transparent !important;
      stroke: transparent !important;
    }
  }

  .svg-edge {
    cursor: move;
    fill: none;
  }

  .svg-edge--highlight-node__drop-target {
    .svg-edge {
      stroke: var(--green) !important;
      stroke-width: calc(3 * var(--zoom)) !important;
      stroke-dasharray: none !important;
    }
  }
  .svg-shape-control-point {
    cursor: crosshair;
    fill: white;
    stroke: var(--crimson);
    stroke-width: calc(1 * var(--zoom));
  }

  .svg-anchor-handle {
    fill: var(--accent-3);
    stroke: var(--accent-9);
    stroke-width: calc(1 * var(--zoom));
  }

  .svg-node__anchor {
    stroke: var(--accent-9);
    fill: white;
    stroke-width: calc(1 * var(--zoom));
  }
}